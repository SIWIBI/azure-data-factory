{
	"name": "pipeDimAccount",
	"properties": {
		"activities": [
			{
				"name": "Truncate stageAccount",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE stage.Account"
						}
					]
				}
			},
			{
				"name": "Get LastLoadDate DimAccount",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Truncate stageAccount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[GetLastLoadDate]",
						"storedProcedureParameters": {
							"TableName": {
								"type": "String",
								"value": "DimAccount"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dsLastLoadDate",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Load stageAccount",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get LastLoadDate DimAccount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "POST",
							"additionalHeaders": "Content-Type: application/json",
							"requestBody": {
								"value": "@{concat('{ \"query\" : \"query {\n  accounts(last: 10000, filter:{dbId_in: [94369,94371,94372,94373,94374,94375,94376,94377,94378,94379,94380,94381,94382,94383,94384,94385,94386,94387,94388,94389,23683209,94390,94391,94392,94393,94394,94395,94396,94397,94398,94399,94400,94401,94402,94403,94404,94405,94406,94407,94408,94409,94410,94411,94412,94413,94414,94415,94416,94417,94418,94419,94420,23600051,94422,94423,94424,94425,94426,23645246,94428,94429,94430,94431,94432,94433,94434,94435,94436,94437,94438,94439,94440,94441,94442,94443,94444,94445,94446,94447,94448,94449,94450,94451,94452,94453,23683221,94454,94455,94456,94457,94458,94459,94460,94461,94462,94463,94464,94465,94466,94467,94468,94469,94470,94471,94472,94473,94474,94475,94476,94477,94478,94479,94480,94481,94482,94483,94484,94485,94486,94487,94488,94489,94490,94491,94492,94493,94494,94495,94496,94497,94498,94499,94500,94501,94502,94503,94504,94505,94506,94507,94508,94509,94510,94511,94512,94513,94514,94515,94516,94517,94518,94519,94520,94521,94522,24884037,94524,24884040,94525,94526,23645269,23645297,94528,94529,94530,94531,94532,94533,94534,94535,94536,94537,94538,94539,94540,94541,94542,94543,94544,94545,94546,94547,94548,94549,94550,94551,94552,94553,94554,94555,94556,94557,94558,94559,94560,94561,94562,94563,94564,94565,94566,94567,94568,94569,94570,23645308,23645329,23645341,23645361,94575,94576,94577,94578,23645379,94580,94581,94582,94583,94584,94585,94586,23645392,94588,94589,94590,94591,94592,94593,94594,94595,94596,94597,94598,24882794,23683245,94600,94601,94602,23645408,23642936,23642949,23642959,24884817,24884818,24884799,23645449,25890391,23645471,23642972,94606,94607,94608,94609,94610,94611,94612,94613,94614,94615,23645243,23645245,94617,23645515,25890394,94619,94620,94621,23683253,94622,94623,94624,94625,94626,94627,94628,94629,94630,94631,94632,94633,94635,94636,94637,94638,94639,94640,94641,94642,94643,94644,94645,94646,94647,94648,94649,94650,94651,23683271,94652,94653,94654,94655,94656,94657,94658,94659,94660,23683296,94661,94662,94663,94664,94667,94668,94669,94670,94671,94672,94673,94674,94675,94676,94677,94678,94679,94680,94681,94682,94683,94684,94685,94686,94687,23683307,94688,94689,94690,94691,94692,94693,94694,94695,94696,94697,94698,94699,94700,24884059,94702,94703,23645579,23645267,94705,94706,94707,94708,94709,94710,94711,94712,23683321,94713,94714,94715,94716,94717,94718,94719,94720,23683358,94721,94722,94723,94724,94725,94726,94727,94728,94729,15545234,94730,94731,94732,94733,94734,94735,94736,94737,94738,94739,94740,94741,94742,94743,94744,94745,94746,94747,94748,94749,94750,94751,94752,94753,94754,23683371,94755,94756,25912910,23645283,94757,94758,94759,94760,94761,94762,94763,94764,94765,94766,94767,94768,94769,94770,94771,94772,94773,94774,94775,94776,23683384,94777,94778,94779,94780,94781,94782,94783,94784,94785,94786,94787,94788,94789,94790,94791,94792,94793,94794,94795,23645299,23645409,23645417,23645419,23645422,23645430,94798,23645434,23645458,94801,94802,94803,94804,94805,94806,94807,94808,94809,94810,94811,94812,94813,94814,94815,94816,23645507,23645527,94817,94818,94819,94820,94821,94822,94823,94824,23645578,23645574,25543695,94826,23683399,23821543,94829,23821549,23821562,25912916,94833,94834,23644773,23644698,94845,23645108,23644931,23644731,23644831,26346224,23644842,26346231,26346233,26346243,23644823,25592265,25592281,25592275,23644813,23644793,23644778,23644757,94880,23644747,23644738,23644729,23644716,23683422,94881,94882,94883,94884,94885,94886,94887,19211015,94888,19211030,94889,94890,94891,94892,94893,94894,94895,94896,94897,94898,94899,94900,94901,94902,94903,94904,94905,94906,94907,94908,94909,94910,94911,94912,94913,94914,94915,94917,23646191,94920,94921,94922,94923,94924,23670508,23646210,94932,94938,94939,23670543,94940,23669737,94941,23670563,94948,94950,23670672,94956,94959,94967,94977,94978,23670740,23670795,94981,94982,94984,94986,94991,23670871,95006,95007,95011,23670989,23670974,23670931,23671003,23671072,23671081,95019,95020,23671106,95022,23671210,95023,23671133,23671159,26008165,23671195,95029,95031,95035,23645686,23645693,23645697,95038,23645725,23645741,26008180,23645758,95047,95048,95049,95050,23645799,95051,23645811,95052,95054,95055,95059,23645835,95061,95062,23654188,23645845,95070,23645874,95077,26008242,95079,95085,95086,95089,95090,23653284,23653186,23653188,95091,23653300,23653308,23653312,95092,95093,95094,95095,26008259,24884109,26164735,25894839,25894843,95096,95106,95115,23653358,23653375,95117,95118,95120,95121,95122,23653435,95125,95126,95127,95128,95129,95130,95131,95132,95133,95134,95135,95136,95137,95138,95139,95140,95141,95142,95143,95146,23653503,23673117,95167,95171,95174,95175,95186,95188,95191,95206,23653527,95210,23673892,95225,25912909,23653543,95226,95227,25342676,95233,95234,95242,23653561,23653566,23653577,95259,23654280,23654282,23654285,23654292,95260,95264,95265,95270,95271,23643500,23654306,23654309,95276,95277,95278,95279,95280,95281,95282,95283,95284,95285,95299,95305,95311,95312,95313,95314,95315,95316,95317,95318,95319,95320,95321,95322,95323,95324,95325,95326,95328,95329,95330,95331,95332,95333,95334,95335,95336,95337,95338,95339,95340,95341,95342,95343,95344,95345,95346,95347,95348,95349,95350,95351,95352,95353,95354,95355,95356,95357,95358,95359,95360,95361,95362,95363,95364,95365,95366,95367,95368,95369,95370,95371,23643419,95380,95381,25878469,25878423,25878426,95391,23643286,95403,95407,95408,95415,95417,95418,95419,95420,95421,95422,95423,95424,95425,95426,95427,95428,95429,95430,95431,95432,95433,95434,95435,95436,95437,95438,95439,95440,95441,95442,25878497,95449,23820826,23820861,23820869,23820875,23820880,23820882,23820891,23820918,23820925,23820931,23820935,23820941,23820948,23820951,23820966,23820974,23820978,23820989,95450,95451,95452]}) {\n    edges {\n      node {\n        asset\n        balanceSheet\n        code\n        cost\n        credit\n        dbId\n        description\n        equity\n        finance\n        liabilities\n        modifiedAt\n        posting\n        revenue\n        accountGroupDbId\n        accountGroup {\n          dbId\n          code\n          description\n        }\n      }\n    }\n  }\n}\"}')}",
								"type": "Expression"
							},
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['node']['asset']"
								},
								"sink": {
									"name": "asset",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['balanceSheet']"
								},
								"sink": {
									"name": "balanceSheet",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['code']"
								},
								"sink": {
									"name": "code",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['node']['cost']"
								},
								"sink": {
									"name": "cost",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['credit']"
								},
								"sink": {
									"name": "credit",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['dbId']"
								},
								"sink": {
									"name": "_AccountKey",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['node']['description']"
								},
								"sink": {
									"name": "description",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['node']['equity']"
								},
								"sink": {
									"name": "equity",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['finance']"
								},
								"sink": {
									"name": "finance",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['liabilities']"
								},
								"sink": {
									"name": "liabilities",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['modifiedAt']"
								},
								"sink": {
									"name": "modifiedAt",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['node']['posting']"
								},
								"sink": {
									"name": "posting",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['revenue']"
								},
								"sink": {
									"name": "revenue",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['node']['accountGroup']['dbId']"
								},
								"sink": {
									"name": "_AccountGroupKey",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['node']['accountGroup']['code']"
								},
								"sink": {
									"name": "AccountGroupCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['node']['accountGroup']['description']"
								},
								"sink": {
									"name": "AccountGroupDescription",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['data']['accounts']['edges']"
					}
				},
				"inputs": [
					{
						"referenceName": "JSONEXL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dsStageAccount",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Exledger Keys",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Load stageAccount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "UPDATE stage.Account\nSET _AccountKey = 'EXL|' + _AccountKey\n, _AccountGroupKey = 'EXL|' + _AccountGroupKey"
						}
					]
				}
			},
			{
				"name": "Upsert DimAccount",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Update Exledger Keys",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpsertDimAccount]"
				},
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update LastLoadDate",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Upsert DimAccount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateLastLoadDate]",
					"storedProcedureParameters": {
						"TableName": {
							"value": "DimAccount",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": []
	}
}