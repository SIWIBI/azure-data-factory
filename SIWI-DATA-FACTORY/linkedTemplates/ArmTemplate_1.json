{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SIWI-DATA-FACTORY"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeDimAccount')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageAccount",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.Account"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimAccount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageAccount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimAccount"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageAccount",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimAccount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {\n  accounts(last: 10000, filter: {modifiedAt_gt: \\\"',activity('Get LastLoadDate DimAccount').output.firstrow.LastLoadDate,'\\\"}) {\n    edges {\n      node {\n        asset\n        balanceSheet\n        code\n        cost\n        credit\n        dbId\n        description\n        equity\n        finance\n        liabilities\n        modifiedAt\n        posting\n        revenue\n        accountGroupDbId\n        accountGroup {\n          dbId\n          code\n          description\n        }\n      }\n    }\n  }\n}\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['asset']"
										},
										"sink": {
											"name": "asset",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['balanceSheet']"
										},
										"sink": {
											"name": "balanceSheet",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['cost']"
										},
										"sink": {
											"name": "cost",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['credit']"
										},
										"sink": {
											"name": "credit",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_AccountKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['equity']"
										},
										"sink": {
											"name": "equity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['finance']"
										},
										"sink": {
											"name": "finance",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['liabilities']"
										},
										"sink": {
											"name": "liabilities",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['modifiedAt']"
										},
										"sink": {
											"name": "modifiedAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['posting']"
										},
										"sink": {
											"name": "posting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['revenue']"
										},
										"sink": {
											"name": "revenue",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['accountGroup']['dbId']"
										},
										"sink": {
											"name": "_AccountGroupKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['accountGroup']['code']"
										},
										"sink": {
											"name": "AccountGroupCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['accountGroup']['description']"
										},
										"sink": {
											"name": "AccountGroupDescription",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['accounts']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageAccount",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Exledger Keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageAccount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.Account\nSET _AccountKey = 'EXL|' + _AccountKey\n, _AccountGroupKey = 'EXL|' + _AccountGroupKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimAccount",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger Keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertDimAccount]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimAccount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimAccount",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeDimActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageAcitivty",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.Activity"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimActivity",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageAcitivty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimActivity"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {\n  objectValues(first: 10000, filter: {definitionId:993, modifiedAt_gt:\\\"',activity('Get LastLoadDate DimActivity').output.firstrow.LastLoadDate,'\\\"}) {\n    edges {\n      node {\n        code\n        description\n        dbId\n      }\n    }\n  }\n}\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_ActivityKey",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['objectValues']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageActivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Xledger keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.Activity\nSET _ActivityKey = 'EXL|' + _ActivityKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Xledger keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertDimActivity]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimActivity",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeDimEmployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load stageEmployee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: applicatoin/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query { employees(last: 1000, filter: {modifiedAt_gt:\\\"',activity('Get LastLoadDate DimEmployee').output.firstrow.LastLoadDate,'\\\"}) { edges { node { code contactDbId createdAt dateFrom dateTo dbId description email employeeGroupDbId modifiedAt glObject1 { code description dbId } employeeGroup { code description } } } } }\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['contactDbId']"
										},
										"sink": {
											"name": "_ContactKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['createdAt']"
										},
										"sink": {
											"name": "createdAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['dateFrom']"
										},
										"sink": {
											"name": "dateFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['dateTo']"
										},
										"sink": {
											"name": "dateTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_EmployeeKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['employeeGroupDbId']"
										},
										"sink": {
											"name": "_EmployeeGroupKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['modifiedAt']"
										},
										"sink": {
											"name": "modifiedAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['glObject1']['code']"
										},
										"sink": {
											"name": "_CostCenterKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['glObject1']['description']"
										},
										"sink": {
											"name": "CostCenterCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['glObject1']['dbId']"
										},
										"sink": {
											"name": "CostCenterDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['employeeGroup']['code']"
										},
										"sink": {
											"name": "EmployeeGroupCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['employeeGroup']['description']"
										},
										"sink": {
											"name": "EmployeeGroupDescription",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['employees']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stageEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get LastLoadDate DimEmployee",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimEmployee"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Exledger keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.Employee\nSET _EmployeeKey = 'EXL|' + _EmployeeKey\n\n\nUPDATE stage.Employee\nSET _ContactKey = 'EXL|' + _ContactKey\n\nUPDATE stage.Employee\nSET _CostCenterKey = 'EXL|' + _CostCenterKey\n\nUPDATE stage.Employee\nSET _EmployeeGroupKey = 'EXL|' + _EmployeeGroupKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimEmployee",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertDimEmployee]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimEmployee",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate stageEmployee",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.Employee"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T10:56:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeDimEmployeeGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get LastLoadDate DimEmployeeGroup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageEmployeeGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimEmployeeGroup"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageEmployeeGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimEmployeeGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query { employeeGroups(last: 100, filter: {modifiedAt_gt: \\\"',activity('Get LastLoadDate DimEmployeeGroup').output.firstrow.LastLoadDate,'\\\"}) { edges { node { code createdAt dbId description modifiedAt } } } } \"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['createdAt']"
										},
										"sink": {
											"name": "createdAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_EmployeeGroupKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['modifiedAt']"
										},
										"sink": {
											"name": "modifiedAt",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['employeeGroups']['edges']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageEmployeeGroup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate stageEmployeeGroup",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.EmployeeGroup"
								}
							]
						}
					},
					{
						"name": "Update Exledger keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageEmployeeGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.EmployeeGroup\nSET _EmployeeGroupKey = 'EXL|' + _EmployeeGroupKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimEmployeeGroup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertDimEmployeeGroup]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimEmployeeGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimEmployeeGroup",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeProjectGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageProjectGroup",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.ProjectGroup"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimProjectGroup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageProjectGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimProjectGroup"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageProjectGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimProjectGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {\n  objectValues(first: 1000, filter: {definitionId:38, modifiedAt_gt:\\\"',activity('Get LastLoadDate DimProjectGroup').output.firstrow.LastLoadDate,'\\\"}) {\n    edges {\n      node {\n        code\n        description\n        dbId\n      }\n    }\n  }\n}\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_ProjectGroupKey",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['objectValues']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageProjectGroup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Exledger Keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageProjectGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.ProjectGroup \nSET _ProjectGroupKey = 'EXL|' + _ProjectGroupKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimProjectGroup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger Keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertProjectGroup]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimProjectGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimProjectGroup",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipedDimProject')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageProject",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.Project"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimProject",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageProject",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimProject"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageProject",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimProject",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {\n  projects(last: 10000, filter: {modifiedAt_gte: \\\"',activity('Get LastLoadDate DimProject').output.firstrow.LastLoadDate,'\\\"}) {\n    edges {\n      node {\n        accessControl\n        activity\n        billable\n        code\n        createdAt\n        dbId\n        description\n        email\n        fromDate\n        fundProject\n        modifiedAt\n        shortInfo\n        shortInternalInfo\n        text\n        timesheetEntry\n        toDate\n        totalCost\n        totalEstimateHours\n        totalRevenue\n        yearlyCost\n        yearlyEstimateHours\n        yearlyRevenue\n        projectGroup {\n          code\n          dbId\n          description\n        }\n        glObject2 {\n          code\n          dbId\n          description\n        }\n        mainProjectDbId\n        mainProject {\n          code\n          description\n        }\n      }\n    }\n  }\n}\n\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['accessControl']"
										},
										"sink": {
											"name": "accessControl",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['activity']"
										},
										"sink": {
											"name": "activity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['billable']"
										},
										"sink": {
											"name": "billable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['createdAt']"
										},
										"sink": {
											"name": "createdAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_ProjectKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['fromDate']"
										},
										"sink": {
											"name": "fromDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['fundProject']"
										},
										"sink": {
											"name": "fundProject",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['modifiedAt']"
										},
										"sink": {
											"name": "modifiedAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['shortInfo']"
										},
										"sink": {
											"name": "shortInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['shortInternalInfo']"
										},
										"sink": {
											"name": "shortInternalInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['text']"
										},
										"sink": {
											"name": "ptext",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['timesheetEntry']"
										},
										"sink": {
											"name": "timesheetEntry",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['node']['toDate']"
										},
										"sink": {
											"name": "toDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['node']['totalCost']"
										},
										"sink": {
											"name": "totalCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['totalEstimateHours']"
										},
										"sink": {
											"name": "totalEstimateHours",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['totalRevenue']"
										},
										"sink": {
											"name": "totalRevenue",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['yearlyCost']"
										},
										"sink": {
											"name": "yearlyCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['yearlyEstimateHours']"
										},
										"sink": {
											"name": "yearlyEstimateHours",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['yearlyRevenue']"
										},
										"sink": {
											"name": "yearlyRevenue",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['node']['projectGroup']['code']"
										},
										"sink": {
											"name": "projectGroupCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['projectGroup']['dbId']"
										},
										"sink": {
											"name": "_ProjectGroupKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['projectGroup']['description']"
										},
										"sink": {
											"name": "projectGroupDescription",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['projects']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageProject",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeLoadAllDimensions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load DimEmployee",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeDimEmployee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimEmployeeGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeDimEmployeeGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimAccountGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimEmployeeGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeAccountGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeDimEmployee')]",
				"[concat(variables('factoryId'), '/pipelines/pipeDimEmployeeGroup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeRunEmAll')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load all dimensions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeLoadAllDimensions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeLoadAllDimensions')]"
			]
		}
	]
}