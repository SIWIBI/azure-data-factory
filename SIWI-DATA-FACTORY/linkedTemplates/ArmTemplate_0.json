{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SIWI-DATA-FACTORY"
		},
		"Load Xkedger_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'Load Xkedger'"
		},
		"SIWIBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SIWIBlobStorage'"
		},
		"SIWIDBConn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SIWIDBConn'"
		},
		"Load Xkedger_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://siwibiaf.azurewebsites.net"
		},
		"XledgerConn_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.xledger.net/graphql"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load Xkedger')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('Load Xkedger_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('Load Xkedger_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SIWIBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SIWIBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SIWIDBConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SIWIDBConn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XledgerConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('XledgerConn_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_EmployeeKey",
						"type": "nvarchar"
					},
					{
						"name": "_EmployeeGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "_CostCenterKey",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeCode",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeName",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeGroupCode",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeGroup",
						"type": "nvarchar"
					},
					{
						"name": "CostCenterCode",
						"type": "nvarchar"
					},
					{
						"name": "CostCenterDescription",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeLastLoadDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSONEXL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "XledgerConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/XledgerConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsDimEmployeeGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeGroupKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_EmployeeGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeGroupCode",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeGroup",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployeeGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsLastLoadDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LastLoadId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "LastLoadDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LastLoadDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage",
					"table": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageAccountGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountGroupKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_AccountGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "AccountGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ActivityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_ActivityKey",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Activity"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageCostCenter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CostCenterKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_CostCenterKey",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "CostCenter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageEmployeeGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeGroupKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_EmployeeGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "createdAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "modifiedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "EmployeeGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageProject')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_ProjectKey",
						"type": "nvarchar"
					},
					{
						"name": "_MainProjectKey",
						"type": "nvarchar"
					},
					{
						"name": "_ProjectGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "_CostCenterKey",
						"type": "nvarchar"
					},
					{
						"name": "accessControl",
						"type": "bit"
					},
					{
						"name": "activity",
						"type": "bit"
					},
					{
						"name": "billable",
						"type": "bit"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "createdAt",
						"type": "date"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "fromDate",
						"type": "date"
					},
					{
						"name": "fundProject",
						"type": "bit"
					},
					{
						"name": "modifiedAt",
						"type": "date"
					},
					{
						"name": "shortInfo",
						"type": "nvarchar"
					},
					{
						"name": "shortInternalInfo",
						"type": "nvarchar"
					},
					{
						"name": "text",
						"type": "nvarchar"
					},
					{
						"name": "timesheetEntry",
						"type": "bit"
					},
					{
						"name": "toDate",
						"type": "date"
					},
					{
						"name": "totalCost",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "totalEstimateHours",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "totalRevenue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "yearlyCost",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "yearlyEstimateHours",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "yearlyRevenue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "projectGroupCode",
						"type": "nvarchar"
					},
					{
						"name": "projectGroupDescription",
						"type": "nvarchar"
					},
					{
						"name": "glObject2Code",
						"type": "nvarchar"
					},
					{
						"name": "glObject2Description",
						"type": "nvarchar"
					},
					{
						"name": "mainProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "mainProjectDescription",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Project"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStageProjectGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectGroupKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "_ProjectGroupKey",
						"type": "nvarchar"
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "ProjectGroup",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "ProjectGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "acc.json",
						"folderPath": "testdir",
						"container": "xledger"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"data": {
							"type": "object",
							"properties": {
								"accounts": {
									"type": "object",
									"properties": {
										"edges": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"node": {
														"type": "object",
														"properties": {
															"dbId": {
																"type": "integer"
															},
															"code": {
																"type": "string"
															},
															"description": {
																"type": "string"
															},
															"chartOfAccountDbId": {
																"type": "integer"
															},
															"accountGroupDbId": {
																"type": "integer"
															},
															"modifiedAt": {
																"type": "string"
															},
															"accountGroup": {
																"type": "object",
																"properties": {
																	"dbId": {
																		"type": "integer"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SIWIDBConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeAccountGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageAccountGroup",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.AccountGroup"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimAccountGroup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageAccountGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimAccountGroup"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageAccountGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimAccountGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {  objectValues(first: 3000, filter: {modifiedAt_gt:\\\"',activity('Get LastLoadDate DimAccountGroup').output.firstrow.LastLoadDate,'\\\" definitionId:879}) { edges { node { code description dbId } } } } \"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_AccountGroupKey",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['objectValues']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageAccountGroup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Exledger keys",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageAccountGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.AccountGroup\nSET _AccountGroupKey = 'EXL|' + _AccountGroupKey"
								}
							]
						}
					},
					{
						"name": "Upsert DimAccountGroup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger keys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertDimAccountGroup]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update LastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert DimAccountGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimAccountGroup",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]",
				"[concat(variables('factoryId'), '/datasets/dsLastLoadDate')]",
				"[concat(variables('factoryId'), '/datasets/JSONEXL')]",
				"[concat(variables('factoryId'), '/datasets/dsStageAccountGroup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeCostCenter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate stageCostCenter",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE stage.CostCenter"
								}
							]
						}
					},
					{
						"name": "Get LastLoadDate DimCostCenter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate stageCostCenter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetLastLoadDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "DimCostCenter"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsLastLoadDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load stageCostCenter",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get LastLoadDate DimCostCenter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "@{concat('{ \"query\" : \"query {\n  objectValues(first: 100, filter: {definitionId:41, modifiedAt_gt:\\\"',activity('Get LastLoadDate DimCostCenter').output.firstrow.LastLoadDate,'\\\"}) {\n    edges {\n      node {\n        code\n        description\n        dbId\n      }\n    }\n  }\n}\"}')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['node']['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['node']['dbId']"
										},
										"sink": {
											"name": "_CostCenterKey",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']['objectValues']['edges']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONEXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsStageCostCenter",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Exledger",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Load stageCostCenter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "UPDATE stage.CostCenter \nSET _CostCenterKey = 'EXL|' + _CostCenterKey"
								}
							]
						}
					},
					{
						"name": "Upsert CostCenter",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Exledger",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpsertCostCenter]"
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update GetLastLoadDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upsert CostCenter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastLoadDate]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "DimCostCenter",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SIWIDBConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SIWIDBConn')]",
				"[concat(variables('factoryId'), '/datasets/dsLastLoadDate')]",
				"[concat(variables('factoryId'), '/datasets/JSONEXL')]",
				"[concat(variables('factoryId'), '/datasets/dsStageCostCenter')]"
			]
		}
	]
}